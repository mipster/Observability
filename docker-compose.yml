# Docker Compose version is automatically detected in newer versions

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: zara-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    container_name: zara-grafana
    ports:
      - '3001:3000' # Grafana on 3001, freeing up 3000 for your frontend
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped
    networks:
      - observability
    depends_on:
      - prometheus

  alertmanager:
    image: prom/alertmanager:latest
    container_name: zara-alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - observability

  node-exporter:
    image: prom/node-exporter:latest
    container_name: zara-node-exporter
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - observability

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: zara-blackbox-exporter
    ports:
      - '9115:9115'
    volumes:
      - ./blackbox:/etc/blackbox
    command:
      - '--config.file=/etc/blackbox/blackbox.yml'
    restart: unless-stopped
    networks:
      - observability

  loki:
    image: grafana/loki:2.9.0
    container_name: zara-loki
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki:/etc/loki
      - ./loki-data:/loki
    restart: unless-stopped
    networks:
      - observability

  minio:
    image: minio/minio:latest
    container_name: zara-minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    restart: unless-stopped
    networks:
      - observability

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:
  loki-data:
  minio-data:

networks:
  observability:
    driver: bridge
